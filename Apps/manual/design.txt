1. постепенно создаётся и поддерживается один общий словарь. 
словарь в кодировке CP1251
словарь состоит из нескольких файлов-таблиц-...
формат - текстовый, с тем чтобы была переносимость между языками программирования. 
	(python dump - не проходит, так как неуниверсальный, базы данных тоже, на данном этапе, ну и еще потому, что не сильно струкрурированные данные будут)

1.1 словарь номиналов
составляющие данный словарь слова являются изначальные формы слов, например "неопределенная форма глагола", "именительный падеж едиснтвенное число сущ"
	сама форма (буква Ё сохраняется)
	ударение, или список ударений. при остуствии (неизветсности где стоит ударение) это особо помечается
	при наличии в слове буквы Е, должен быть отдельный аттрибут, что "слово проверено" и в нем точно нет Ё (noYO). три состояния - есть Ё, нет Ё,не проверено.
		данный аттрибут автоматически выставлять в "нет Ё" для слов где нет буквы Е или Ё. если в слове явно есть Ё, то выставлять в "есть Ё"
	слово проверено
	
атрибуты:
	часть речи: сущ, глагол, прилагательное, ...
	классификация в зависимости от части речи: склонение для существительных, род, число; спряжение для глаголов, неправильность глаголов
	отметка "исключение" - например для глаголов
	отметка "только множественное число" для существительных (ножницы)
	
	ссылки на словоформы образовнные от номинала. с указанием связи : падеж, время.
	альтернативные возможности ударения: звонИт, звОнит - варианты: звОнит может быть еще одним инстансем в списке
	
может быть несколько номиналов одинаковые по написанию, но относящиеся кразным частям речи
одинаковые номиналы могут совпадать или не совпадать по ударению
в том числе может быть номинал и словоформа сопадающие по написанию, 
в словарь должны попадать и новообразования типа : фывапролдж, отхачил, скомуниздил

1.2 словарь форм слов для слов которые изменяются: сущ, пригал. глагол
	написание
	ударения
	альтернативные возможности ударения: звонИт, звОнит - варианты: звОнит может быть еще одним инстансем в списке
	написание + ударение являются ключем, по этому ключу определяется к какой номинальной форме относится
	слово проверено
	ссылка на номинал (именно в нем содержатся аттрибуты
	
1.3 словарь странных, неграмотных слов (должен быть чтобы исключить многочисленную перепроверку
	длинношеееееее
	спасииииибо
	небуду
	длодлоооо
	
1.4 словарь своих сгенерированных слов
	побудильник
	разбудильник
	кружина (не мое, но...) а может и не в этот словарь должно попадать
	
1.5 словарь-буфер новых найденных слов

1.6 словарь корней русского языка
1.7 словарь приставок
1.8 словарь суффиксов
1.9 словарь окончаний
	
2. утилиты
2.1 проверки словаря. все непроверенные слова проходят проверку на часть речи, склононения и т.п. формы этого слова и таблицы словаря обновляются
	в том числе проверка словаря буфера
	ручное добавление придуманных слов
	должен быть набор функций, который 
	1) по номиналу выдает все словоформы - поможет быстрее расправиться со всеми словоформами, с их характеристиками
	2) по выставленным вручную аттрибутам словоформы выдает номинал и соответственно остальные словоформы.
	3)
2.2 сканирование интернета в поисках новых слов
	хождение по страницам интерена, скачивание найденных слов, сверка с имеющимся словарем. и если находится - заполнение словаря буфера.
	можно ввести стартовую страницу, утилита предложит все найденные линки, можно автоматом просканировать их (== собрать новые слова и новые линки)
	и т.п. 
	желательно сразу сохранять линки в локальной базе, с тем, чтобы по ним не ходить вторично. возможно у линков надо ставить галку - часто обновляемый: 
	как у головных страниц новостных сайтов. то есть данный линк можно часто проверять. 
	может даже иметь список стартовых страниц
2.3 генерация новых слов
	- нужен список вариантов словоборазования: приставки, суффиквы, корни
	по номиналу выдать возможные словоформы
	
3	API доступа к словарю
3.1 загрузка словарей, структура
	сохранение
	изменение словаря в памяти
	сохранение изменений словаря на диске
	резервное копирование словарей. 
3.2 список фукнций: (определиться еще что нужно)
	- isNominal()
	- isNoun()
	- generateForm()
	
	
	
	
	
	
	
	
	
	
	
	
	
	