TODO

1. 	find all anagramms for a word-form
1.1 	sort anagrams by "frequency of use"/popularity
2. 	make up IDs for variables : 
	anagram
	chaset - set of characters with count from which a word if compound: e2f1r1 = free
3. 	a dictionary with "sounds" - some chars which can be replaced: "d-t", "i-e" in non-accented
4. 	professional vocabulary
	character, letter, symbol
	word (=lexical item), wordform
	anagram	
	fonogram
	unisound
	dictionary, vocabulary
	accent
	noun, verb, pre-verb, adjective, particle, names, caradinal numbers, interjection (araticle, exclamation), pronounm, preposition, adverb, conjunction
	"initial form of a word" - nominal?
	verb - infinitive, future, past, 
	part of speech, word class, lexical class, lexical category
	слог = syllable
	созвучный - consonant
	гласная = vowel
	согласная = consonant
	
5. 	E-YO dependent/independant operations
6.	Capital-small dependent/independant operations
7.	First letter Capital-small dependent/independant operations
8.	Accent dependent/independant operations
9.	list of russian hot-humor words
10.	extend volabulary with web-parsed words. func to walk around web pages and collect new words
11.	func to walk around web, collect words, and count their populatiry
12.	like1=for a given word, find all words which distinct from it by 1 letter (пилот -> полит...)
13.	like2=for a given word, find all words which distinct from it by 1 missing letter (полет -> поле)
14.	like3=for a given word, find all words which distinct from it by 1 extra letter (поле -> полет)
15. 	like1_1 = found word is not a derivate from initial word in semantic respect
16. 	like1_2 = found word from the same 'word class/lexical class'
17. 	like1_3 = found word is NOT from the same 'word class/lexical class'
18.	generate all word forms for an unknown/new/"not included in dict" word, based on the defined word: class and other attributes
19.	add dates in name of the auto generating files
20. 	check performance "if YO in word: replace YO/E" to "replace YO/E"
21.	raw data adapters: "read" adapters to extract data from external resources and organize them into internal formats
22. internal formats: wordForm, lexical item attributes - extracted and calculated, canonical forms/normalized, nominal, initial
23. find all fonogramms for one wf
24. for a given word: find all words which differ by one missing char. пастель-патель
25. add Names of peoples, Geo objects, Astro obj, etc, famraceutic, sience terms, - 
26. GUI tkinter
27. filenames, data structures, etc - their name have to contain attribute's 
	- c0/ c1 / c2 / c3 - case unknown / case sensitive (have wf in any case), insencitive (all lower case) / mix
	- e0 / e1 / e2 / e3- YO (have words with YO) , all YO translated to E / mix
	- r0 (mix)/ r1 (cp1251) / r2 utf-8 / r3 ???? /r9 (unknown)- codepage for russian chars
	- a0 / a1 / a2 - unknown / accented / not accented / a3 (mix)
	example: nominal_c1e1r1a1.txt 
		nominal_c1e1r1a1
28. в GUI - для слов в E предлагать указать не являтеся ли одно из Е Ё. или явно указать, что нет .все верно.
	

DONE:
